version: 2

models:  
  - name: stg_ga4__events
    description: Staging model that generates keys for users, sessions, and events. Also parses URLs to remove query string params as defined in project config. 
    columns:
      - name: client_key
        description: Surrogate key created from stream_id and user_pseudo_id. Provides a way to uniquely identify a user's device within a stream. Important when using the package to combine data across properties and streams.
      - name: event_key
        description: >
          Surrogate key for events. Potential for uniqueness test to fail if client_key or session_id is null
          and uniqueness depends on differentiation by that value.
        tests:
          - unique
      - name: page_path
        description: This field contains the page_location with the query string portion removed. Uses macro remove_query_string
      - name: page_engagement_key
        description: > 
          This field is used to assign engagement_time_msec to the correct page. 
          While the GA4 documentation claims that a user_engagement event that sets engagement_time_msec should fire when navigating to a new page, 
          the data shows that this is not always the case. When a user_engagement event does not fire, the engagement_time_msec parameter is assigned to the next page_view. 
          This engagement time should be credited to the previous page, 
          so for page_view events this field uses the session_key and page_referrer as the key while all other events use the session_key and page_location.
unit_tests:
  - name: query_parameter_removal
    description: "Check that query parameters get removed from the model."
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://asite.com/page?parameter=this_param,    page_referrer: https://asite.com/previous_page?parameter=previous_value}
          - {page_location: https://asite.com/anotherpage?parameter=param%20with%20encoded%20spaces,    page_referrer: https://asite.com/previous_page?utm_source=source_value}
          - {page_location: https://anothersite.com/page?not_excluded_param=val&parameter=someval&param=also_not_excluded, page_referrer: https://anothersite.com/previous_page#utm_source=source_value#parameter=previous_value#hash=hash_value}
          - {page_location: https://twoparams.com/page&parameter=someval&second_param=1value, page_referrer: https://twoparams.com/previous_page?second_param=a_value#parameter=previous_value#hash=hash_value}
    overrides:
      vars:
        query_parameter_exclusions: ["parameter","second_param"]
    expect:
      rows:
        - {page_location: https://asite.com/page,    page_referrer: https://asite.com/previous_page}
        - {page_location: https://asite.com/anotherpage,    page_referrer: https://asite.com/previous_page?utm_source=source_value}
        - {page_location: https://anothersite.com/page?not_excluded_param=val&param=also_not_excluded, page_referrer: https://anothersite.com/previous_page#utm_source=source_value#hash=hash_value}
        - {page_location: https://twoparams.com/page, page_referrer: https://twoparams.com/previous_page#hash=hash_value}
  - name: query_parameter_remove_all
    description: "Check that the '*all*' flag removes all query parameters from the model."
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://asite.com/page?parameter=this_param,    page_referrer: https://asite.com/previous_page?parameter=previous_value}
          - {page_location: https://asite.com/anotherpage?parameter=param%20with%20encoded%20spaces,    page_referrer: https://asite.com/previous_page?utm_source=source_value}
    overrides:
      vars:
        query_parameter_exclusions: ["*all*"]
    expect:
      rows:
        - {page_location: https://asite.com/page,    page_referrer: https://asite.com/previous_page}
        - {page_location: https://asite.com/anotherpage,    page_referrer: https://asite.com/previous_page}
  - name: query_parameter_extraction
    description: "Check that query parameters get extracted from the model and added as new fields."
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://asite.com/page?param1=value1}
          - {page_location: https://asite.com/anotherpage?param1=value%20with%20encoded%20spaces}
          - {page_location: https://sitetwo.com/page?param1=value1&param2=value2}
          - {page_location: https://anothersite.com/page?not_included_param=value&param1=val&param=also_not_included}
          - {page_location: https://threeparams.com/page&param1=another_val&param2=second_val&param3=value3}
          - {page_location: https://noparams.com/}
    overrides:
      vars:
        query_parameter_extraction: ["param1", "param2", "param3"]
    expect:
      rows:
        - {query_param_param1: value1, query_param_param2: null, query_param_param3: null}
        - {query_param_param1: value%20with%20encoded%20spaces, query_param_param2: null, query_param_param3: null}
        - {query_param_param1: value1, query_param_param2: value2, query_param_param3: null}
        - {query_param_param1: val, query_param_param2: null, query_param_param3: null}
        - {query_param_param1: another_val, query_param_param2: second_val, query_param_param3: value3}
        - {query_param_param1: null, query_param_param2: null, query_param_param3: null}
  - name: hostname_extraction_from_url
    description: "Check that the hostname is extracted from the URL"
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://fakesite.com/}
          - {page_location: https://www.mock.sitehub.io/}
          - {page_location: https://cool-site.com/with/this-path}
          - {page_location: https://example.site.app/?parameter=this}
          - {page_location: https://madeup.org/page?param=true&other_param=sure}
    expect:
      rows:
        - {page_hostname: fakesite.com}
        - {page_hostname: mock.sitehub.io}
        - {page_hostname: cool-site.com}
        - {page_hostname: example.site.app}
        - {page_hostname: madeup.org}
  - name: query_string_extraction_from_url
    description: "Check that the query string is extracted from the URL"
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://fakesite.com/?query_string=something}
          - {page_location: https://www.no.query.string/but-has-this-path}
          - {page_location: https://cool-site.com/even-cooler-path?utm_term=test-term&utm_source=test-source}
    expect:
      rows:
        - {page_query_string: query_string=something}
        - {page_query_string: null}
        - {page_query_string: utm_term=test-term&utm_source=test-source}
  - name: page_path_extraction
    description: "Check that the page path is extracted from the URL"
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        rows:
          - {page_location: https://fakesite.com/}
          - {page_location: https://cool-site.com/with/this-path}
          - {page_location: https://example.site.app/?parameter=no-path}
          - {page_location: https://madeup.org/page?param=true&other_param=sure}
    expect:
      rows:
        - {page_path: /}
        - {page_path: /with/this-path}
        - {page_path: /}
        - {page_path: /page}
  - name: test_base_to_stg_ga4__events
    description: "Check whether a given row from base_ga4__events produces the expected row in stg_ga4__events"
    model: stg_ga4__events
    given:
      - input: ref('base_ga4__events')
        format: sql
        rows: |
          select
            date('2021-04-06') as event_date_dt
            , 1617691790431476 as event_timestamp
            , 'first_visit' as event_name
            , array[
              struct(
                'ga_session_number' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                ) as value
              )
              , struct(
                'engaged_session_event' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'ga_session_id' as key
                , struct(
                  cast(null as string) as string_value
                  , 1617691775 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'source' as key
                , struct(
                  'bing' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'page_title' as key
                , struct(
                  'Velir | Behavior-Driven Testing in Drupal 8' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'page_location' as key
                , struct(
                  'https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8?utm_term=test' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'session_engaged' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'engagement_time_msec' as key
                , struct(
                  cast(null as string) as string_value
                  , 30000 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
            ] as event_params
            , null as event_previous_timestamp
            , null as event_value_in_usd
            , 948327668 as event_bundle_sequence_id
            , null as event_server_timestamp_offset
            , cast(null as string) as user_id
            , '1166526666.1617691776' as user_pseudo_id -- Added
            , cast(null as string) as privacy_info_analytics_storage -- Added
            , cast(null as string) as privacy_info_ads_storage -- Added
            , cast(null as string) as privacy_info_uses_transient_token -- Added
            , null as user_properties
            , 1617691790431476 as user_first_touch_timestamp
            , 0.0 as user_ltv_revenue -- Added
            , 'USD' as user_ltv_currency -- Added
            , 'desktop' as device_category -- Added
            , cast(null as string) as device_mobile_brand_name -- Added
            , cast(null as string) as device_mobile_model_name -- Added
            , cast(null as string) as device_mobile_marketing_name -- Added
            , cast(null as string) as device_mobile_os_hardware_model -- Added
            , 'Windows' as device_operating_system -- Added
            , 'Windows 10' as device_operating_system_version -- Added
            , cast(null as string) as device_vendor_id -- Added
            , cast(null as string) as device_advertising_id -- Added
            , 'en-us' as device_language -- Added
            , 'No' as device_is_limited_ad_tracking -- Added
            , null as device_time_zone_offset_seconds -- Added
            , cast(null as string) as device_browser -- Added
            , cast(null as string) as device_browser_version -- Added
            , 'Chrome' as device_web_info_browser -- Added
            , '89.0.4389.114' as device_web_info_browser_version -- Added
            , 'www.velir.com' as device_web_info_hostname -- Added
            , 'Asia' as geo_continent -- Added
            , 'Vietnam' as geo_country -- Added
            , 'Ho Chi Minh City' as geo_region -- Added
            , 'Ho Chi Minh City' as geo_city -- Added
            , 'Southeast Asia' as geo_sub_continent -- Added
            , '(not set)' as geo_metro -- Added
            , cast(null as string) as app_info_id -- Added
            , cast(null as string) as app_info_version -- Added
            , cast(null as string) as app_info_install_store -- Added
            , cast(null as string) as app_info_firebase_app_id -- Added
            , cast(null as string) as app_info_install_source -- Added
            , '(direct)' as user_campaign -- Added
            , '(none)' as user_medium -- Added
            , '(direct)' as user_source -- Added
            , '1966637064' as stream_id
            , 'WEB' as platform
            , null as ecommerce
            , null as items
            , 12345 as property_id
            , 1617691775 as session_id
            , 'https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8?utm_term=test' as page_location
            , 1 as session_number
            , 1 as session_engaged
            , 30000 as engagement_time_msec -- Added
            , 'Velir | Behavior-Driven Testing in Drupal 8' as page_title
            , cast(null as string) as page_referrer
            , 'bing' as event_source -- Added
            , cast(null as string) as event_medium -- Added
            , cast(null as string) as event_campaign -- Added
            , cast(null as string) as event_content -- Added
            , cast(null as string) as event_term -- Added
            , 0 as is_page_view
            , 0 as is_purchase
    expect:
      format: sql
      rows: |
        select
          date('2021-04-06') as event_date_dt
          , 1617691790431476 as event_timestamp
          , 'first_visit' as event_name
          , array[
              struct(
                'ga_session_number' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                ) as value
              )
              , struct(
                'engaged_session_event' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'ga_session_id' as key
                , struct(
                  cast(null as string) as string_value
                  , 1617691775 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'source' as key
                , struct(
                  'bing' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'page_title' as key
                , struct(
                  'Velir | Behavior-Driven Testing in Drupal 8' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'page_location' as key
                , struct(
                  'https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8?utm_term=test' as string_value
                  , null as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'session_engaged' as key
                , struct(
                  cast(null as string) as string_value
                  , 1 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
              , struct(
                'engagement_time_msec' as key
                , struct(
                  cast(null as string) as string_value
                  , 30000 as int_value
                  , cast(null as FLOAT64) as float_value
                  , cast(null as FLOAT64) as double_value
                )
              )
          ] as event_params
          , null as event_previous_timestamp
          , null as event_value_in_usd
          , 948327668 as event_bundle_sequence_id
          , null as event_server_timestamp_offset
          , cast(null as string) as user_id
          , '1166526666.1617691776' as user_pseudo_id -- Added
          , cast(null as string) as privacy_info_analytics_storage -- Added
          , cast(null as string) as privacy_info_ads_storage -- Added
          , cast(null as string) as privacy_info_uses_transient_token -- Added
          , null as user_properties
          , 1617691790431476 as user_first_touch_timestamp
          , 0.0 as user_ltv_revenue -- Added
          , 'USD' as user_ltv_currency -- Added
          , 'desktop' as device_category -- Added
          , cast(null as string) as device_mobile_brand_name -- Added
          , cast(null as string) as device_mobile_model_name -- Added
          , cast(null as string) as device_mobile_marketing_name -- Added
          , cast(null as string) as device_mobile_os_hardware_model -- Added
          , 'Windows' as device_operating_system -- Added
          , 'Windows 10' as device_operating_system_version -- Added
          , cast(null as string) as device_vendor_id -- Added
          , cast(null as string) as device_advertising_id -- Added
          , 'en-us' as device_language -- Added
          , 'No' as device_is_limited_ad_tracking -- Added
          , null as device_time_zone_offset_seconds -- Added
          , cast(null as string) as device_browser -- Added
          , cast(null as string) as device_browser_version -- Added
          , 'Chrome' as device_web_info_browser -- Added
          , '89.0.4389.114' as device_web_info_browser_version -- Added
          , 'www.velir.com' as device_web_info_hostname -- Added
          , 'Asia' as geo_continent -- Added
          , 'Vietnam' as geo_country -- Added
          , 'Ho Chi Minh City' as geo_region -- Added
          , 'Ho Chi Minh City' as geo_city -- Added
          , 'Southeast Asia' as geo_sub_continent -- Added
          , '(not set)' as geo_metro -- Added
          , cast(null as string) as app_info_id -- Added
          , cast(null as string) as app_info_version -- Added
          , cast(null as string) as app_info_install_store -- Added
          , cast(null as string) as app_info_firebase_app_id -- Added
          , cast(null as string) as app_info_install_source -- Added
          , '(direct)' as user_campaign -- Added
          , '(none)' as user_medium -- Added
          , '(direct)' as user_source -- Added
          , '1966637064' as stream_id
          , 'WEB' as platform
          , null as ecommerce
          , null as items
          , 12345 as property_id
          , 1617691775 as session_id
          , 1 as session_number
          , 1 as session_engaged
          , 30000 as engagement_time_msec -- Added
          , 'Velir | Behavior-Driven Testing in Drupal 8' as page_title
          , cast(null as string) as event_content -- Added
          , cast(null as string) as event_term -- Added
          , 0 as is_page_view
          , 0 as is_purchase
          , 'KXZY+6kA4bpHda1EzHaVvw==' as client_key
          , '90mFUqw4xBzU+Xx9/4ycCQ==' as session_key
          , '90mFUqw4xBzU+Xx9/4ycCQ==2021-04-06' as session_partition_key
          , '7HoiVpTakjsH3DJ1t4HGNw==' as event_key
          , 'bing' as event_source -- Added
          , cast(null as string) as event_medium -- Added
          , cast(null as string) as event_campaign -- Added
          , 'test' as query_param_utm_term
          , 'https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8?utm_term=test' as original_page_location
          , cast(null as string) as original_page_referrer
          , '/blog/2016/08/25/behavior-driven-testing-drupal-8' as page_path
          , 'https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8' as page_location
          , cast(null as string) as page_referrer
          , 'velir.com' as page_hostname
          , cast(null as string) as page_query_string
          , '2021-04-06https://www.velir.com/blog/2016/08/25/behavior-driven-testing-drupal-8' as page_key
          , 'il76Ej2ywBpSKKyYSAkOlQ==' as page_engagement_key
    overrides:
      vars:
        query_parameter_exclusions: ["utm_term"]
        query_parameter_extraction: ["utm_term"]
